Make it possible to eval src blocks with bash. Run this if the bedrock
hasn't been set up yet
#+begin_src emacs-lisp
(org-babel-do-load-languages 'org-babel-load-languages '((emacs-lisp . t) (shell . t)))
#+end_src
* Old setup stuff
** Make bin directory for scripts
  #+BEGIN_SRC shell
    mkdir ~/dotfiles/bin
    cd cmds
    make all
  #+END_SRC

  #+RESULTS:
  | ln    | -sf | ~/dotfiles/cmds/calc.sh                 | ~/dotfiles/bin/calc                 |
  | chmod | a+x | ~/dotfiles/bin/calc                     |                                     |
  | ln    | -sf | ~/dotfiles/cmds/setup.sh                | ~/dotfiles/bin/setup                |
  | chmod | a+x | ~/dotfiles/bin/setup                    |                                     |
  | ln    | -sf | ~/dotfiles/cmds/editor.sh               | ~/dotfiles/bin/editor               |
  | chmod | a+x | ~/dotfiles/bin/editor                   |                                     |
  | ln    | -sf | ~/dotfiles/cmds/my-emacs.sh             | ~/dotfiles/bin/my-emacs             |
  | chmod | a+x | ~/dotfiles/bin/my-emacs                 |                                     |
  | ln    | -sf | ~/dotfiles/cmds/fix-git-author.sh       | ~/dotfiles/bin/fix-git-author       |
  | chmod | a+x | ~/dotfiles/bin/fix-git-author           |                                     |
  | ln    | -sf | ~/dotfiles/cmds/unison-sync-docs.sh     | ~/dotfiles/bin/unison-sync-docs     |
  | chmod | a+x | ~/dotfiles/bin/unison-sync-docs         |                                     |
  | ln    | -sf | ~/dotfiles/cmds/unison-last-sync.sh     | ~/dotfiles/bin/unison-last-sync     |
  | chmod | a+x | ~/dotfiles/bin/unison-last-sync         |                                     |
  | ln    | -sf | ~/dotfiles/cmds/connect-hdmi-display.sh | ~/dotfiles/bin/connect-hdmi-display |
  | chmod | a+x | ~/dotfiles/bin/connect-hdmi-display     |                                     |
  | ln    | -sf | ~/dotfiles/cmds/screen_autostart.sh     | ~/dotfiles/bin/screen_autostart     |
  | chmod | a+x | ~/dotfiles/bin/screen_autostart         |                                     |
  | ln    | -sf | ~/dotfiles/cmds/battery-notify.sh       | ~/dotfiles/bin/battery-notify       |
  | chmod | a+x | ~/dotfiles/bin/battery-notify           |                                     |
  | ln    | -sf | ~/dotfiles/cmds/input-test.sh           | ~/dotfiles/bin/input-test           |
  | chmod | a+x | ~/dotfiles/bin/input-test               |                                     |
  | ln    | -sf | ~/dotfiles/cmds/setup-bashrc.sh         | ~/dotfiles/bin/setup-bashrc         |
  | chmod | a+x | ~/dotfiles/bin/setup-bashrc             |                                     |
  | ln    | -sf | ~/dotfiles/cmds/setup-emacs.sh          | ~/dotfiles/bin/setup-emacs          |
  | chmod | a+x | ~/dotfiles/bin/setup-emacs              |                                     |
  | ln    | -sf | ~/dotfiles/cmds/unmntbox.sh             | ~/dotfiles/bin/unmntbox             |
  | chmod | a+x | ~/dotfiles/bin/unmntbox                 |                                     |
  | ln    | -sf | ~/dotfiles/cmds/make-ccl-script.sh      | ~/dotfiles/bin/make-ccl-script      |
  | chmod | a+x | ~/dotfiles/bin/make-ccl-script          |                                     |
  | ln    | -sf | ~/dotfiles/cmds/setup_dbus_address.sh   | ~/dotfiles/bin/setup_dbus_address   |
  | chmod | a+x | ~/dotfiles/bin/setup_dbus_address       |                                     |
  | ln    | -sf | ~/dotfiles/cmds/sbclcompile.sh          | ~/dotfiles/bin/sbclcompile          |
  | chmod | a+x | ~/dotfiles/bin/sbclcompile              |                                     |
** Link init.el to .emacs
  #+BEGIN_SRC shell
    make emacs-config
  #+END_SRC

  #+RESULTS:
  : ln -s ~/dotfiles/init.el ~/.emacs

#+RESULTS:
** Set up bashrc
  Two part bashrc: bashrc.global which has general shell helpers, and a .bashrc.local for anything you want specific to this machine. You should check .bashrc.lenovo for suggestions and whatever ends up in .bashrc.old which is the existing .bashrc
#+BEGIN_SRC shell
make bashrc
#+END_SRC

#+RESULTS:
| chmod | a+x | ~/dotfiles/.bashrc.global |           |    |      |    |           |                |    |
| if    | [   | -f                        | ~/.bashrc | ]; | then | mv | ~/.bashrc | ~/.bashrc.old; | fi |
| ln    | -s  | ~/dotfiles/.bashrc.base   | ~/.bashrc |    |      |    |           |                |    |

* setup zsh
** Create a machine specific env file for variables that are specific to this machine
- For the villa laptop
#+begin_src bash
touch ~/dotfiles/zsh/.zshenv.villa-laptop
#+end_src
- For the desktop
#+begin_src bash
touch ~/dotfiles/zsh/.zshenv.nate-h7
#+end_src
#+RESULTS:
** Install p10k
- see https://github.com/romkatv/powerlevel10k#arch-linux
- but maybe just this if you're on arch
#+begin_src bash
sudo pacman -Syu --noconfirm zsh-theme-powerlevel10k
#+end_src
- otherwise just clone the git repo
#+begin_src bash
mkdir -p ~/github-src/
cd ~/github-src
git clone https://github.com/romkatv/powerlevel10k.git
#+end_src

- Now we need to set the env variable P10K_THEME_FILE to point to wherever you just installed it. If this machine already has a .zshrc.this-machine file it goes there, otherwise create it. Something like this:
-- For the villa laptop
#+begin_src bash
echo 'export P10K_THEME_FILE=$HOME/github-src/powerlevel10k/powerlevel10k.zsh-theme'
>>~/dotfiles/zsh/.zshenv.villa-laptop
#+end_src
-- For the desktop
#+begin_src bash
echo 'export P10K_THEME_FILE=/usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme'>>~/dotfiles/zsh/.zshenv.nate-h7
#+end_src
#+RESULTS:
** Link your machine specific env file
- For the villa laptop
#+begin_src bash
ln -s ~/dotfiles/zsh/.zshenv.villa-laptop ~/.zshenv.this-machine
#+end_src
- For the desktop
#+begin_src bash
ln -s ~/dotfiles/zsh/.zshenv.nate-h7 ~/.zshenv.this-machine
#+end_src

#+RESULTS:
** Now link the main zshrc
#+begin_src bash
set -x
if [ -f ~/.zshrc ]; then mv ~/.zshrc ~/.zshrc.old; fi
ln -s ~/dotfiles/zsh/.zshrc ~/.zshrc

if [ -f ~/.zshenv ]; then mv ~/.zshenv ~/.zshenv.old; fi
ln -s ~/dotfiles/zsh/.zshenv ~/.zshenv

if [ -f ~/.p10k.zsh ]; then mv ~/.p10k.zsh ~/.p10k.zsh.old; fi
ln -s ~/dotfiles/.p10k.zsh ~/.p10k.zsh
#+end_src

#+RESULTS:
* pyenv
#+begin_src bash
curl https://pyenv.run | bash
#+end_src
* cmake and make for compiling vterm
#+begin_src bash
sudo pacman -Syu cmake make
#+end_src
* Setup emacs bedrock
#+begin_src bash
set -x
mkdir -p ~/.emacs.d
ln -s ~/dotfiles/emacs-bedrock/init.el ~/.emacs.d/init.el
ln -s ~/dotfiles/emacs-bedrock/earl-init.el ~/.emacs.d/early-init.el
ln -s ~/dotfiles/emacs-bedrock/mixins ~/.emacs.d/mixins
#+end_src

#+RESULTS:
* Setup ~/Documents backup
** Decrypt the password file
#+begin_src bash
gpg -d backup-passwords.env.gpg -o backup-passwords.env
#+end_src
** Copy the service files
#+begin_src bash
mkdir -p ~/.config/systemd/user
cp ~/dotfiles/systemd/* ~/.config/systemd/user
#+end_src

#+RESULTS:
** Enable timers
#+begin_src bash
systemctl --user enable --now restic-backup.timer
systemctl --user enable --now restic-prune.timer
#+end_src
** Restore Documents
#+begin_src bash
restic -r s3:s3.us-east-005.backblazeb2.com/chodosh-backup-testing restore latest:/home/nate --target 
#+end_src
